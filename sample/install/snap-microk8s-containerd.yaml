apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: container-image.csi.k8s.io
spec:
  attachRequired: false
  podInfoOnMount: true
  volumeLifecycleModes:
    - Persistent
    - Ephemeral
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: container-image-csi-driver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: container-image-csi-driver
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resourceNames:
      - container-image-csi-driver
    resources:
      - serviceaccounts
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: container-image-csi-driver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: container-image-csi-driver
subjects:
  - kind: ServiceAccount
    name: container-image-csi-driver
    namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  creationTimestamp: null
  name: container-image-csi-driver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: container-image-csi-driver
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: container-image-csi-driver
    spec:
      containers:
        - args:
            - --csi-address=/csi/csi.sock
            - --kubelet-registration-path=/var/snap/microk8s/common/var/lib/kubelet/plugins/container-image.csi.k8s.io/csi.sock
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          image: quay.io/k8scsi/csi-node-driver-registrar:v1.1.0
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - rm -rf /registration/container-image.csi.k8s.io /registration/container-image.csi.k8s.io-reg.sock
          name: node-driver-registrar
          resources: {}
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /registration
              name: registration-dir
        - args:
            - --endpoint=$(CSI_ENDPOINT)
            - --node=$(KUBE_NODE_NAME)
            - --runtime-addr=$(CRI_ADDR)
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: CRI_ADDR
              value: containerd:///var/snap/microk8s/common/run/containerd.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          image: docker.io/warmmetal/container-image-csi-driver:latest
          imagePullPolicy: IfNotPresent
          name: plugin
          resources: {}
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /var/snap/microk8s/common/var/lib/kubelet/pods
              mountPropagation: Bidirectional
              name: mountpoint-dir
            - mountPath: /var/snap/microk8s/common/run/containerd.sock
              name: runtime-socket
            - mountPath: /var/snap/microk8s/common/var/lib/containerd/io.containerd.snapshotter.v1.overlayfs
              mountPropagation: Bidirectional
              name: snapshot-root-0
      hostNetwork: false
      serviceAccountName: container-image-csi-driver
      volumes:
        - hostPath:
            path: /var/snap/microk8s/common/var/lib/kubelet/plugins/container-image.csi.k8s.io
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /var/snap/microk8s/common/var/lib/kubelet/pods
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: /var/snap/microk8s/common/var/lib/kubelet/plugins_registry
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/snap/microk8s/common/run/containerd.sock
            type: Socket
          name: runtime-socket
        - hostPath:
            path: /var/snap/microk8s/common/var/lib/containerd/io.containerd.snapshotter.v1.overlayfs
            type: Directory
          name: snapshot-root-0
  updateStrategy: {}
status:
  currentNumberScheduled: 0
  desiredNumberScheduled: 0
  numberMisscheduled: 0
  numberReady: 0
