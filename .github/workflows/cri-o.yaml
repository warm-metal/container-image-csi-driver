name: cri-o-10mins
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
jobs:
  integration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Start a kind cluster with crio
        uses: helm/kind-action@v1.12.0
        with:
          cluster_name: kind-${{ github.run_id }}
          kubectl_version: "v1.25.2"
          node_image: "docker.io/warmmetal/kindest-node-crio:v1.25.2-container-image-csi-driver"
      - name: Install private registry
        run: ./hack/ci/setup_private_registry.sh
      - name: Build image
        run: ./hack/ci/build.sh
      - name: Set image version
        run: |
          echo "VALUE_FILE=charts/warm-metal-csi-driver/values-crio.yaml" >> "$GITHUB_ENV"
          echo "IMAGE_TAG=$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"
          echo "HELM_NAME=wm-csi-integration-tests" >> "$GITHUB_ENV"
      - name: Install the CSI Driver
        run: |
          trap "kubectl -n kube-system describe po" ERR
          helm install ${HELM_NAME} charts/warm-metal-csi-driver -n kube-system \
            -f ${VALUE_FILE} \
            --set csiPlugin.image.tag=${IMAGE_TAG} \
            --wait \
            --debug
      - name: Verify CSI Driver Pods
        if: always()
        run: |
          echo "=== CSI Driver Pods Status ==="
          kubectl get pods -n kube-system -l app=container-image-csi-driver -o wide
          echo ""
          echo "=== CSI Driver Pod Details ==="
          kubectl describe pods -n kube-system -l app=container-image-csi-driver
          echo ""
          echo "=== CSI Driver Pod Logs ==="
          for pod in $(kubectl get pods -n kube-system -l app=container-image-csi-driver -o name); do
            echo "Logs for $pod:"
            kubectl logs -n kube-system $pod --all-containers --tail=100 || true
          done
      - name: Run integration Tests
        run: ./hack/ci/test.sh
      - name: Debug Failed Jobs
        if: failure()
        run: |
          echo "=== Failed Job Details ==="
          kubectl get jobs -o wide
          kubectl describe jobs
          echo ""
          echo "=== Pod Status ==="
          kubectl get pods -o wide
          echo ""
          echo "=== Failed Pod Details ==="
          for pod in $(kubectl get pods --field-selector=status.phase!=Succeeded,status.phase!=Running -o name); do
            echo "Details for $pod:"
            kubectl describe $pod
            echo ""
            echo "Logs for $pod:"
            kubectl logs $pod --all-containers --tail=200 || true
            echo ""
          done
          echo ""
          echo "=== CSI Driver Logs ==="
          kubectl logs -n kube-system -l app=container-image-csi-driver --all-containers --tail=200 || true
          echo ""
          echo "=== Events ==="
          kubectl get events --sort-by='.lastTimestamp' -A
      - name: Uninstall the CSI Driver
        run: helm uninstall -n kube-system ${HELM_NAME} --wait
