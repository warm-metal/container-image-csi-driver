apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: kube-systemd-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: units.core.systemd.warmmetal.tech
spec:
  group: core.systemd.warmmetal.tech
  names:
    kind: Unit
    listKind: UnitList
    plural: units
    singular: unit
  scope: Cluster
  versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Unit is the Schema for the units API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: UnitSpec defines the desired state of Unit
              properties:
                config:
                  additionalProperties:
                    type: string
                  description: Config specifies config files and contents on the host with respect to the systemd unit. The key is the absolute path of the configuration file. And, the value is the file content.
                  type: object
                definition:
                  description: Definition specifies the unit definition. If set, it is written to the unit configuration which Path defines. Or, the original unit on the host will be used.
                  type: string
                path:
                  description: Path defines the absolute path on the host of the unit.
                  type: string
              type: object
            status:
              description: UnitStatus defines the observed state of Unit
              properties:
                error:
                  description: Specify Errors on reconcile
                  type: string
                execTimestamp:
                  description: Timestamp of the last execution
                  format: date-time
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kube-systemd-leader-election-role
  namespace: kube-systemd-system
rules:
  - apiGroups:
      - ""
      - coordination.k8s.io
    resources:
      - configmaps
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: kube-systemd-manager-role
rules:
  - apiGroups:
      - core.systemd.warmmetal.tech
    resources:
      - units
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - core.systemd.warmmetal.tech
    resources:
      - units/finalizers
    verbs:
      - update
  - apiGroups:
      - core.systemd.warmmetal.tech
    resources:
      - units/status
    verbs:
      - get
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-systemd-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-systemd-proxy-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kube-systemd-leader-election-rolebinding
  namespace: kube-systemd-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kube-systemd-leader-election-role
subjects:
  - kind: ServiceAccount
    name: default
    namespace: kube-systemd-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-systemd-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-systemd-manager-role
subjects:
  - kind: ServiceAccount
    name: default
    namespace: kube-systemd-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-systemd-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-systemd-proxy-role
subjects:
  - kind: ServiceAccount
    name: default
    namespace: kube-systemd-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: b4119a85.systemd.warmmetal.tech
kind: ConfigMap
metadata:
  name: kube-systemd-manager-config
  namespace: kube-systemd-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: kube-systemd-controller-manager-metrics-service
  namespace: kube-systemd-system
spec:
  ports:
    - name: https
      port: 8443
      targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    control-plane: controller-manager
  name: kube-systemd-controller-manager
  namespace: kube-systemd-system
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=10
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
        - args:
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=127.0.0.1:8080
          command:
            - /manager
          image: docker.io/warmmetal/kube-systemd-controller:v0.1.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 100m
              memory: 30Mi
            requests:
              cpu: 100m
              memory: 20Mi
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /etc
              name: systemd-config
            - mountPath: /lib/systemd
              name: systemd-lib
            - mountPath: /etc/systemd
              name: systemd-etc
            - mountPath: /run/systemd
              name: systemd-run
      volumes:
        - hostPath:
            path: /etc
            type: Directory
          name: systemd-config
        - hostPath:
            path: /lib/systemd
            type: Directory
          name: systemd-lib
        - hostPath:
            path: /etc/systemd
            type: Directory
          name: systemd-etc
        - hostPath:
            path: /run/systemd
            type: Directory
          name: systemd-run
---
apiVersion: core.systemd.warmmetal.tech/v1
kind: Unit
metadata:
  name: systemd-containerd.service
spec:
  path: "/lib/systemd/system/containerd.service"
  config:
    "/etc/containerd/config.toml": ""
